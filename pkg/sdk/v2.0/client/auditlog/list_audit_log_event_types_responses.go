// Code generated by go-swagger; DO NOT EDIT.

package auditlog

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/goharbor/go-client/pkg/sdk/v2.0/models"
)

// ListAuditLogEventTypesReader is a Reader for the ListAuditLogEventTypes structure.
type ListAuditLogEventTypesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListAuditLogEventTypesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListAuditLogEventTypesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListAuditLogEventTypesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListAuditLogEventTypesOK creates a ListAuditLogEventTypesOK with default headers values
func NewListAuditLogEventTypesOK() *ListAuditLogEventTypesOK {
	return &ListAuditLogEventTypesOK{}
}

/*
ListAuditLogEventTypesOK describes a response with status code 200, with default header values.

Success
*/
type ListAuditLogEventTypesOK struct {
	Payload []*models.AuditLogEventType
}

// IsSuccess returns true when this list audit log event types o k response has a 2xx status code
func (o *ListAuditLogEventTypesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list audit log event types o k response has a 3xx status code
func (o *ListAuditLogEventTypesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list audit log event types o k response has a 4xx status code
func (o *ListAuditLogEventTypesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list audit log event types o k response has a 5xx status code
func (o *ListAuditLogEventTypesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list audit log event types o k response a status code equal to that given
func (o *ListAuditLogEventTypesOK) IsCode(code int) bool {
	return code == 200
}

func (o *ListAuditLogEventTypesOK) Error() string {
	return fmt.Sprintf("[GET /auditlog-exts/events][%d] listAuditLogEventTypesOK  %+v", 200, o.Payload)
}

func (o *ListAuditLogEventTypesOK) String() string {
	return fmt.Sprintf("[GET /auditlog-exts/events][%d] listAuditLogEventTypesOK  %+v", 200, o.Payload)
}

func (o *ListAuditLogEventTypesOK) GetPayload() []*models.AuditLogEventType {
	return o.Payload
}

func (o *ListAuditLogEventTypesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAuditLogEventTypesUnauthorized creates a ListAuditLogEventTypesUnauthorized with default headers values
func NewListAuditLogEventTypesUnauthorized() *ListAuditLogEventTypesUnauthorized {
	return &ListAuditLogEventTypesUnauthorized{}
}

/*
ListAuditLogEventTypesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListAuditLogEventTypesUnauthorized struct {

	/* The ID of the corresponding request for the response
	 */
	XRequestID string

	Payload *models.Errors
}

// IsSuccess returns true when this list audit log event types unauthorized response has a 2xx status code
func (o *ListAuditLogEventTypesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list audit log event types unauthorized response has a 3xx status code
func (o *ListAuditLogEventTypesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list audit log event types unauthorized response has a 4xx status code
func (o *ListAuditLogEventTypesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list audit log event types unauthorized response has a 5xx status code
func (o *ListAuditLogEventTypesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list audit log event types unauthorized response a status code equal to that given
func (o *ListAuditLogEventTypesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ListAuditLogEventTypesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /auditlog-exts/events][%d] listAuditLogEventTypesUnauthorized  %+v", 401, o.Payload)
}

func (o *ListAuditLogEventTypesUnauthorized) String() string {
	return fmt.Sprintf("[GET /auditlog-exts/events][%d] listAuditLogEventTypesUnauthorized  %+v", 401, o.Payload)
}

func (o *ListAuditLogEventTypesUnauthorized) GetPayload() *models.Errors {
	return o.Payload
}

func (o *ListAuditLogEventTypesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-Request-Id
	hdrXRequestID := response.GetHeader("X-Request-Id")

	if hdrXRequestID != "" {
		o.XRequestID = hdrXRequestID
	}

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
